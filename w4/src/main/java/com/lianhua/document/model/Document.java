package com.lianhua.document.model;

// Generated 2013-3-27 13:37:50 by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import com.lianhua.declaration.model.Declaration;

/**
 * Document generated by hbm2java
 */
public class Document implements java.io.Serializable,
		com.rootrip.platform.common.dao.Entity<Long> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private Long id;
	private Long declarationId;
	private Declaration declaration;
	private Long descriptorId;
	private DocumentDescriptor descriptor;
	private String principal;
	private String preparer;
	private String mobile;
	private Date signDate;
	private Set<Property> properties = new HashSet<Property>(0);
	private boolean saved = false;
	
	private Map<String, Property> propertyMap;
	
	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	public Long getDeclarationId() {
		return declarationId;
	}
	public void setDeclarationId(Long declarationId) {
		this.declarationId = declarationId;
	}
	public Declaration getDeclaration() {
		return declaration;
	}
	public void setDeclaration(Declaration declaration) {
		this.declaration = declaration;
	}
	public String getPrincipal() {
		return principal;
	}
	public void setPrincipal(String principal) {
		this.principal = principal;
	}
	public String getPreparer() {
		return preparer;
	}
	public void setPreparer(String preparer) {
		this.preparer = preparer;
	}
	public String getMobile() {
		return mobile;
	}
	public void setMobile(String mobile) {
		this.mobile = mobile;
	}
	public Date getSignDate() {
		return signDate;
	}
	public void setSignDate(Date signDate) {
		this.signDate = signDate;
	}
	public Set<Property> getProperties() {
		return properties;
	}
	public void setProperties(Set<Property> properties) {
		this.properties = properties;
	}
	public Long getDescriptorId() {
		return descriptorId;
	}
	public void setDescriptorId(Long descriptorId) {
		this.descriptorId = descriptorId;
	}
	public DocumentDescriptor getDescriptor() {
		return descriptor;
	}
	public void setDescriptor(DocumentDescriptor descriptor) {
		this.descriptor = descriptor;
	}
	
	public Map<String, Property> getPropertyMap() {
		if(propertyMap == null) {
			propertyMap = new HashMap<>();
			for(Property prop : properties) {
				propertyMap.put(prop.getName(), prop);
			}
		}
		return propertyMap;
	}
	public boolean isSaved() {
		return saved;
	}
	public void setSaved(boolean saved) {
		this.saved = saved;
	}
	
}
